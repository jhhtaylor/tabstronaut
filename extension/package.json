{
  "name": "tabstronaut",
  "displayName": "Tabstronaut",
  "publisher": "jhhtaylor",
  "author": {
    "name": "Jon Taylor",
    "email": "jhhtaylor@gmail.com"
  },
  "description": "A cosmic solution to group VS Code editor tabs",
  "icon": "media/Tabstronaut.png",
  "galleryBanner": {
    "color": "#FF914D",
    "theme": "dark"
  },
  "homepage": "https://github.com/jhhtaylor/tabstronaut/blob/main/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/jhhtaylor/tabstronaut"
  },
  "bugs": {
    "url": "https://github.com/jhhtaylor/tabstronaut/issues",
    "email": "jhhtaylor@gmail.com"
  },
  "version": "1.1.9",
  "engines": {
    "vscode": "^1.79.1"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Tabs",
    "Organization",
    "Groups",
    "Workspaces",
    "Efficiency",
    "Productivity"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "tabstronaut.openTabGroupContextMenu",
        "category": "Tabstronaut",
        "title": "Add to Tab Group...",
        "icon": "$(plus)"
      },
      {
        "command": "tabstronaut.restoreAllTabsInGroup",
        "category": "Tabstronaut",
        "title": "Restore Tab Group",
        "icon": "$(debug-continue-small)"
      },
      {
        "command": "tabstronaut.renameTabGroup",
        "category": "Tabstronaut",
        "title": "Rename Tab Group...",
        "icon": "$(pencil)"
      },
      {
        "command": "tabstronaut.removeTabGroup",
        "category": "Tabstronaut",
        "title": "Remove Tab Group...",
        "icon": "$(trash)"
      },
      {
        "command": "tabstronaut.previewSpecificTab",
        "category": "Tabstronaut",
        "title": "Preview Tab",
        "icon": "$(debug-continue-small)"
      },
      {
        "command": "tabstronaut.restoreSpecificTab",
        "category": "Tabstronaut",
        "title": "Restore Tab",
        "icon": "$(debug-continue-small)"
      },
      {
        "command": "tabstronaut.removeSpecificTab",
        "category": "Tabstronaut",
        "title": "Remove Tab from Tab Group",
        "icon": "$(trash)"
      },
      {
        "command": "tabstronaut.addCurrentTabToGroup",
        "category": "Tabstronaut",
        "title": "Add current tab to Tab Group",
        "icon": "$(plus)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "tabstronaut",
          "name": "Tabstronaut",
          "contextualTitle": "Tabstronaut",
          "icon": "media/icon.svg"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "tabstronaut.openTabGroupContextMenu",
          "when": "view == tabstronaut",
          "group": "navigation@0"
        }
      ],
      "view/item/context": [
        {
          "command": "tabstronaut.addCurrentTabToGroup",
          "when": "view == tabstronaut && viewItem == group",
          "group": "inline@0"
        },
        {
          "command": "tabstronaut.restoreAllTabsInGroup",
          "when": "view == tabstronaut && viewItem == group",
          "group": "inline@1"
        },
        {
          "command": "tabstronaut.renameTabGroup",
          "when": "view == tabstronaut && viewItem == group",
          "group": "inline@2"
        },
        {
          "command": "tabstronaut.removeTabGroup",
          "when": "view == tabstronaut && viewItem == group",
          "group": "inline@3"
        },
        {
          "command": "tabstronaut.restoreSpecificTab",
          "when": "view == tabstronaut && viewItem == tab",
          "group": "inline@0"
        },
        {
          "command": "tabstronaut.removeSpecificTab",
          "when": "view == tabstronaut && viewItem == tab",
          "group": "inline@1"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run copyfiles && npm run package",
    "copyfiles": "copy ..\\README.md .\\README.md && copy ..\\LICENSE .\\LICENSE",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.x",
    "@types/polka": "^0.5.4",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "@typescript-eslint/parser": "^5.60.1",
    "@vscode/test-electron": "^2.3.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.42.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.4",
    "typescript": "^5.1.3",
    "webpack": "^5.86.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "axios": "^1.4.0",
    "polka": "^0.5.2"
  }
}
